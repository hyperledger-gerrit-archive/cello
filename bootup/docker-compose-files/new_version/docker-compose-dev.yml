# This compose file will deploy the services, and bootup a mongo server.

# Copyright IBM Corp., All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#
# Local `/opt/cello/mongo` will be used for the db storage.

#  cello-nginx: proxy to access operator dashboard service, listen on 8080
#  cello-operator-dashboard: dashboard service for operators
#  cello-user-dashboard: user service of cello, listen on 8081
#  engine: engine service of cello to provide RESTful APIs, listen on 80
#  cello-mongo: mongo db

version: '3.2'
services:
  postgres-server:
    image: postgres:11.1
    hostname: cello-postgres-server
    container_name: cello-postgres-server
    restart: always
    environment:
      - POSTGRES_DB=api-engine
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
    volumes:
      - /opt/cello/postgres:/var/lib/postgresql/data

  redis:
    image: redis:4.0.13
    hostname: cello-redis
    container_name: cello-redis
    volumes:
      - /opt/cello/redis:/data

  api-engine:
    image: hyperledger/cello-api-engine
    hostname: cello-api-engine
    container_name: cello-api-engine
    restart: always
    links:
      - postgres-server
      - redis
    environment:
      - WEBROOT=${API_ENGINE_WEBROOT}
      - DEBUG=True
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_NAME=api-engine
      - DB_HOST=postgres-server
      - DB_PORT=5432
      - SSO_ID=${API_ENGINE_DOCKER_KEY}
      - SSO_SECRET=${API_ENGINE_DOCKER_SECRET}
      - SSO_AUTH_URL=${API_ENGINE_SSO_AUTH_URL}
      - SSO_REALM=${KEYCLOAK_REALM}
      - KEYCLOAK_REALM=$KEYCLOAK_REALM
      - KEYCLOAK_SERVER=$SERVICE_KEYCLOAK_NAME
      - KEYCLOAK_ADMIN_NAME=$KEYCLOAK_ADMIN_NAME
      - KEYCLOAK_ADMIN_PASSWORD=$KEYCLOAK_ADMIN_PASSWORD
      - ADMIN_TOKEN=$API_ENGINE_ADMIN_TOKEN
      - CELERY_BROKER_URL=redis://redis
      - ADMIN_USERNAME=$API_ENGINE_ADMIN_USERNAME
      - ADMIN_PASSWORD=$API_ENGINE_ADMIN_PASSWORD
      - ADMIN_EMAIL=$API_ENGINE_ADMIN_EMAIL
      - DOCKER_HOST=$DOCKER_HOST
      - API_VERSION=$API_VERSION
    ports:
      - "${API_ENGINE_SERVICE_PORT}:8080"
    volumes:
      - $ROOT_PATH/src/api-engine:/var/www/server
      - /var/run/docker.sock:/var/run/docker.sock

  api-engine-tasks:
    image: hyperledger/cello-api-engine
    hostname: cello-api-engine-tasks
    container_name: cello-api-engine-tasks
    restart: always
    links:
    - postgres-server
    - redis
    environment:
    - WEBROOT=${API_ENGINE_WEBROOT}
    - DEBUG=True
    - DB_USER=${POSTGRES_USER}
    - DB_PASSWORD=${POSTGRES_PASSWORD}
    - DB_NAME=api-engine
    - DB_HOST=postgres-server
    - DB_PORT=5432
    - SSO_ID=${API_ENGINE_DOCKER_KEY}
    - SSO_SECRET=${API_ENGINE_DOCKER_SECRET}
    - SSO_AUTH_URL=${API_ENGINE_SSO_AUTH_URL}
    - SSO_REALM=${KEYCLOAK_REALM}
    - KEYCLOAK_REALM=$KEYCLOAK_REALM
    - KEYCLOAK_SERVER=$SERVICE_KEYCLOAK_NAME
    - KEYCLOAK_ADMIN_NAME=$KEYCLOAK_ADMIN_NAME
    - KEYCLOAK_ADMIN_PASSWORD=$KEYCLOAK_ADMIN_PASSWORD
    - ADMIN_TOKEN=$API_ENGINE_ADMIN_TOKEN
    - CELERY_BROKER_URL=redis://redis
    - API_VERSION=$API_VERSION
    volumes:
    - $ROOT_PATH/src/api-engine:/var/www/server
    command: bash -c "celery -A api_engine worker -l info"

  dashboard:
    image: hyperledger/cello-dashboard
    container_name: cello-dashboard
    links:
      - api-engine
    environment:
      - API_PROXY=http://api-engine:8080/engine
    ports:
      - "${DASHBOARD_SERVICE_PORT}:80"
